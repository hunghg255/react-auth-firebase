{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/SignUp.js","components/Dashboard.js","components/Login.js","components/PrivateRoute.js","components/ForgotPassword.js","components/UpdateProfile.js","components/App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","signUp","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logOut","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","SignUp","emailRef","useRef","passwordRef","passwordConfirmRef","error","setError","history","useHistory","e","a","preventDefault","current","push","Card","className","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","ref","required","Button","disabled","to","Dashboard","handleLogout","Body","onClick","Login","PrivateRoute","Component","component","rest","render","props","ForgotPassword","message","setMessage","UpdateProfile","promises","Promise","all","then","catch","finally","defaultValue","placeholder","App","Container","style","minHeight","maxWidth","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6353971c.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\n\nconst app = firebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGE_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n});\nexport const auth = app.auth();\nexport default app;\n","import React, { useState, useEffect } from 'react';\n\nimport { auth } from '../firebase.js';\n\nconst AuthContext = React.createContext();\n\nexport function useAuth() {\n  return React.useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      if (user) setCurrentUser(user);\n      setLoading(false);\n    });\n\n    return unsubscribe;\n  }, []);\n\n  // sign Up\n  function signUp(email, password) {\n    return auth.createUserWithEmailAndPassword(email, password);\n  }\n\n  // Login\n  function login(email, password) {\n    return auth.signInWithEmailAndPassword(email, password);\n  }\n\n  // logOut\n  function logOut() {\n    return auth.signOut();\n  }\n\n  // reset password\n  function resetPassword(email) {\n    return auth.sendPasswordResetEmail(email);\n  }\n\n  function updateEmail(email) {\n    return currentUser.updateEmail(email)\n  }\n\n  function updatePassword(password) {\n    return currentUser.updatePassword(password)\n  }\n\n  const value = {\n    currentUser,\n    signUp,\n    login,\n    logOut,\n    resetPassword,\n    updateEmail,\n    updatePassword,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n}\n","import { useRef, useState } from 'react'\nimport { Form, Button, Card , Alert} from 'react-bootstrap';\nimport { Link, useHistory } from 'react-router-dom'\n\nimport { useAuth } from '../contexts/AuthContext'\n\nexport default function SignUp() {\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const { signUp } = useAuth();\n\n  const history = useHistory();\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError('Passwords do not match');\n    }\n\n    try {\n      setError('');\n      setLoading(true);\n      await signUp(emailRef.current.value, passwordRef.current.value);\n      history.push('/');\n    } catch (error) {\n      setError('Failed to create an account');\n    }\n    setLoading(false);\n  }\n\n  return (\n    <>\n      <Card className=\"p-3\">\n        <h2 className=\"text-center mb-4\">Sign Up</h2>\n        { error && <Alert variant=\"danger\">{error}</Alert> }\n\n        <Form onSubmit={handleSubmit}>\n          <Form.Group id=\"email\">\n            <Form.Label>Email</Form.Label>\n            <Form.Control type=\"email\" ref={emailRef} required />\n          </Form.Group>\n\n          <Form.Group id=\"password\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control type=\"password\" ref={passwordRef} required />\n          </Form.Group>\n\n          <Form.Group id=\"password-confirm\">\n            <Form.Label>Password Confirmation</Form.Label>\n            <Form.Control type=\"password\" ref={passwordConfirmRef} required />\n          </Form.Group>\n\n          <Button disabled={loading} className=\"w-100\" type=\"submit\">Sign Up</Button>\n        </Form>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        Already have an account? <Link to=\"/login\">Login</Link>\n      </div>\n    </>\n  )\n}\n","import React, { useState } from 'react'\nimport { Card, Button, Alert } from 'react-bootstrap'\n\nimport { Link, useHistory } from 'react-router-dom'\n\nimport { useAuth } from '../contexts/AuthContext'\n\nexport default function Dashboard() {\n  const [error, setError] = useState('');\n\n  const { currentUser, logOut } = useAuth();\n\n  const history = useHistory();\n\n  const handleLogout = async () => {\n    setError('');\n\n    try {\n      await logOut();\n      history.push('/login');\n    } catch (error) {\n      setError(error);\n    }\n  }\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Profile</h2>\n          {  error && <Alert variant=\"danger\">{error}</Alert>}\n          <strong>Email:</strong> {currentUser.email}\n          <Link to=\"/update-profile\" className=\"btn btn-primary w-100 mt-3\">Update Profile</Link>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        <Button variant=\"link\" onClick={handleLogout}>\n          Log out\n        </Button>\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport { useRef, useState  } from 'react'\nimport { Form, Button, Card , Alert} from 'react-bootstrap';\nimport { Link, useHistory } from 'react-router-dom'\n\nimport { useAuth } from '../contexts/AuthContext'\n\nexport default function Login() {\n  const emailRef = useRef();\n  const passwordRef = useRef();\n\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const { login } = useAuth();\n\n  const history = useHistory();\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      setError('');\n      setLoading(true);\n      await login(emailRef.current.value, passwordRef.current.value);\n      history.push(\"/\");\n    } catch (error) {\n      setError('Failed to login');\n    }\n    setLoading(false);\n  }\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Log In</h2>\n          { error && <Alert variant=\"danger\">{error}</Alert> }\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control type=\"email\" ref={emailRef} required />\n            </Form.Group>\n\n            <Form.Group id=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control type=\"password\" ref={passwordRef} required />\n            </Form.Group>\n\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">Log In</Button>\n          </Form>\n\n          <div className=\"w-100 text-center mt-3\">\n            <Link to=\"/forgot-password\">Forgot Password</Link>\n          </div>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        Need an account? <Link to=\"/signup\">Sign Up</Link>\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport { Route , Redirect} from 'react-router-dom'\nimport { useAuth } from '../contexts/AuthContext'\n\nexport default function PrivateRoute({ component: Component, ...rest }) {\n  const { currentUser } = useAuth();\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\n      }}\n    ></Route>\n  )\n}\n","import React from 'react'\nimport { useRef, useState  } from 'react'\nimport { Form, Button, Card , Alert} from 'react-bootstrap';\nimport { Link, useHistory } from 'react-router-dom'\n\nimport { useAuth } from '../contexts/AuthContext'\n\nexport default function ForgotPassword() {\n  const emailRef = useRef();\n\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n\n  const { resetPassword } = useAuth();\n\n  const history = useHistory();\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      setMessage('');\n      setError('');\n      setLoading(true);\n      await resetPassword(emailRef.current.value);\n      setMessage('Check your inbox')\n    } catch (error) {\n      setError('Failed to reset');\n    }\n    setLoading(false);\n  }\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Reset Password</h2>\n          { error && <Alert variant=\"danger\">{error}</Alert> }\n          {message && <Alert variant=\"success\">{message}</Alert>}\n\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control type=\"email\" ref={emailRef} required />\n            </Form.Group>\n\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">Reset Password</Button>\n          </Form>\n\n          <div className=\"w-100 text-center mt-3\">\n            <Link to=\"/login\">Login</Link>\n          </div>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        Need an account? <Link to=\"/signup\">Sign Up</Link>\n      </div>\n    </>\n  )\n}\n","import React, { useRef, useState } from \"react\"\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { Link, useHistory } from \"react-router-dom\"\n\nexport default function UpdateProfile() {\n  const emailRef = useRef()\n  const passwordRef = useRef()\n  const passwordConfirmRef = useRef()\n  const { currentUser, updatePassword, updateEmail } = useAuth()\n  const [error, setError] = useState(\"\")\n  const [loading, setLoading] = useState(false)\n  const history = useHistory()\n\n  function handleSubmit(e) {\n    e.preventDefault()\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"Passwords do not match\")\n    }\n\n    const promises = []\n    setLoading(true)\n    setError(\"\")\n\n    if (emailRef.current.value !== currentUser.email) {\n      promises.push(updateEmail(emailRef.current.value))\n    }\n    if (passwordRef.current.value) {\n      promises.push(updatePassword(passwordRef.current.value))\n    }\n\n    Promise.all(promises)\n      .then(() => {\n        history.push(\"/\")\n      })\n      .catch(() => {\n        setError(\"Failed to update account\")\n      })\n      .finally(() => {\n        setLoading(false)\n      })\n  }\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Update Profile</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type=\"email\"\n                ref={emailRef}\n                required\n                defaultValue={currentUser.email}\n              />\n            </Form.Group>\n            <Form.Group id=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                ref={passwordRef}\n                placeholder=\"Leave blank to keep the same\"\n              />\n            </Form.Group>\n            <Form.Group id=\"password-confirm\">\n              <Form.Label>Password Confirmation</Form.Label>\n              <Form.Control\n                type=\"password\"\n                ref={passwordConfirmRef}\n                placeholder=\"Leave blank to keep the same\"\n              />\n            </Form.Group>\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\n              Update\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        <Link to=\"/\">Cancel</Link>\n      </div>\n    </>\n  )\n}\n","import { Container } from 'react-bootstrap';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nimport { AuthProvider } from '../contexts/AuthContext';\nimport SignUp from './SignUp';\nimport Dashboard from './Dashboard'\nimport Login from './Login'\nimport PrivateRoute from './PrivateRoute'\nimport ForgotPassword from './ForgotPassword'\nimport UpdateProfile from './UpdateProfile'\n\nfunction App() {\n  return (\n    <Container\n      className='d-flex align-items-center justify-content-center'\n      style={{\n        minHeight: '100vh',\n      }}\n    >\n      <div\n        className='w-100'\n        style={{\n          maxWidth: '400px',\n        }}\n      >\n        <Router>\n          <AuthProvider>\n            <Switch>\n              <PrivateRoute exact path=\"/\" component={Dashboard} />\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n              <PrivateRoute exact path=\"/update-profile\" component={UpdateProfile} />\n              <Route path=\"/signup\" component={SignUp} />\n              <Route path=\"/login\" component={Login} />\n              <Route path=\"/forgot-password\" component={ForgotPassword} />\n            </Switch>\n          </AuthProvider>\n        </Router>\n      </div>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}